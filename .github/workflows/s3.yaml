name: Upload to s3
    
run-name: ${{ github.actor }} is deploying infrastructure to AWS
on: 
  pull_request:
    branches:
    - main
    paths:
      - 'terraform/**'
    types: [ opened, closed, synchronize, reopened ]

env:
  TERRAFORM_PATH: ./terraform
  PLAN_NAME: terraform-plan
  MERGED: merged


permissions: 
  id-token: write
  contents: read
  
jobs:
  tf-plan-to-s3:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix: 
        stage: [ 'nonproduction', 'preproduction', 'production' ]
      fail-fast: true
      max-parallel: 1
    defaults:
      run:
        working-directory: ${{ format('{0}/{1}', env.TERRAFORM_PATH, matrix.stage) }}

    steps:
      - name: Check out repository code
        id: chckoutRepo
        uses: actions/checkout@v3

      - name: Upload Artifact To PR Actions
        id: Upload
        if: ${{ (github.event_name == 'pull_request') && (github.event.pull_request.merged == false) }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('{0}-{1}', matrix.stage, env.PLAN_NAME) }}
          path: ${{ env.TERRAFORM_PATH }}/${{ matrix.stage }}

      - name: Download artifact
        if: ${{ (github.event_name == 'pull_request') && (github.event.pull_request.merged == true) }}
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} 
          workflow: s3.yaml
          workflow_conclusion: success
          name: ${{ format('{0}-{1}', matrix.stage, env.PLAN_NAME) }}
          search_artifacts: true
          if_no_artifact_found: fail
          path: ${{ env.TERRAFORM_PATH }}/${{ matrix.stage }}

      - name: Upload Artifact To PR Actions
        id: uploadMerged
        if: ${{ (github.event_name == 'pull_request') && (github.event.pull_request.merged == true) }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ format('{0}-{1}-{2}', env.MERGED, matrix.stage, env.PLAN_NAME) }}
          path: ${{ env.TERRAFORM_PATH }}/${{ matrix.stage }}
