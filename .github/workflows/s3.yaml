name: Upload to s3
    
run-name: ${{ github.actor }} is deploying infrastructure to AWS
on: 
  pull_request:
    branches:
    - main
    types: [ opened, closed, synchronize, reopened ]

env:
  TERRAFORM_PATH: ./terraform
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  
jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.TERRAFORM_PATH }}
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1

      - name: Check out repository code
        id: chckoutRepo
        uses: actions/checkout@v3

      - name: Setup TF
        id: setup
        uses: hashicorp/setup-terraform@v2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: ${{ (github.event_name == 'pull_request') && (github.event.pull_request.merged == false) }}
        run: terraform plan -no-color -input=false
        continue-on-error: true

      - name: Upload Artifact
        id: Upload
        uses: actions/upload-artifact@v3
        with:
          name: test-infra
          path: path/to/artifact/world.txt

      - name: Set up PR comments
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Download artifact
        if: github.event.pull_request.merged == true
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: s3.yaml
          workflow_conclusion: success
          name: artifact_name
          search_artifacts: true
          if_no_artifact_found: fail

      - name: Terraform Apply
        if: github.event_name.pull_request.merged == true
        run: terraform apply -auto-approve -input=false
          
